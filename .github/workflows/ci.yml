name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  win-ci:
    runs-on: windows-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps (app + dev)
        shell: cmd
        run: |
          python -m pip install -U pip
          if exist requirements.txt pip install -r requirements.txt
          pip install black ruff mypy pytest pytest-cov uvicorn fastapi

      - name: Lint / Type
        shell: cmd
        run: |
          ruff check .
          black --check .
          mypy --ignore-missing-imports .

      - name: Unit tests
        shell: cmd
        run: |
          pytest -q --maxfail=1 --disable-warnings --cov=. || exit /b 1

      - name: Start app (background) & wait health
        shell: pwsh
        run: |
          $p = Start-Process -FilePath python -ArgumentList @('-m','uvicorn','main:app','--host','127.0.0.1','--port','9103') -PassThru -WindowStyle Hidden
          $ok = $false
          1..30 | ForEach-Object {
            try {
              $r = Invoke-RestMethod 'http://127.0.0.1:9103/health' -TimeoutSec 2
              if ($r.status -eq 'healthy') { $ok = $true; break }
            } catch { Start-Sleep -Milliseconds 500 }
          }
          if (-not $ok) {
            Write-Host 'Health failed'; Get-Process -Id $p.Id | Stop-Process -Force
            throw 'App did not become healthy in CI'
          }
          '$($p.Id)' | Out-File -FilePath app.pid -Encoding ascii

      - name: Smoke (e2e)
        shell: pwsh
        run: |
          powershell -NoProfile -ExecutionPolicy Bypass -File .\scripts\smoke_e2e.ps1 -Root 'http://127.0.0.1:9103'

      - name: Smoke (batch)
        shell: pwsh
        run: |
          powershell -NoProfile -ExecutionPolicy Bypass -File .\scripts\smoke_batch.ps1 -Root 'http://127.0.0.1:9103'

      - name: Stop app
        if: always()
        shell: pwsh
        run: |
          if (Test-Path .\app.pid) {
            $pid = Get-Content .\app.pid -Raw
            try { Get-Process -Id $pid | Stop-Process -Force } catch {}
          }
